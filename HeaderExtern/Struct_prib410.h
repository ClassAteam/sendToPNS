// Общая структура для приборов, шумов,
// радиосвязи и речевого информатора самолета L-410 УВП-Е20
#ifndef _STRUCT_PRIB_H // #endif
#define _STRUCT_PRIB_H


#pragma pack(push, 1)

//-----------------------------------------------
// параметры шумов
struct SHSOUND_OUT
{
 bool   Close_cockpit;   // Выключение компьютеров   
 int    Identifier;     // ЗАДАТЬ 999111
 
 bool   Priz_Kasanie1;  // Признак касания ВПП лев.  (для пробежки)
 bool   Priz_Kasanie2;  // Признак касания ВПП прав. (для пробежки)
 bool   Priz_Kasanie3;  // Признак касания ВПП нос.  (для пробежки)

 bool   Priz_Kasanie1_earth;  // Признак касания лев. грунт (для пробежки)
 bool   Priz_Kasanie2_earth;  // Признак касания прав. грунт (для пробежки)
 bool   Priz_Kasanie3_earth;  // Признак касания нос. грунт (для пробежки)

 bool   Priz_no_shassi; // Признак посадки на фюзеляж

 bool   Priz_wing1;     // Признак удара лев. крылом
 bool   Priz_wing2;     // Признак удара прав. крылом
 bool   Priz_hvost;     // Признак удара хвостом

 bool   Priz_pneum1;    // Признак разрыва колес лев.
 bool   Priz_pneum2;    // Признак разрыва колес прав.
 bool   Priz_pneum3;    // Признак разрыва колес нос.

 bool   Priz_Gt1;       // Признак воспламенения топлива лев. двиг.
 bool   Priz_Gt2;       // Признак воспламенения топлива прав. двиг.

 bool   Priz_nasos;     // Признак работы топливного насоса
 bool   Priz_rap;       // Признак работы РАП

 bool   Priz_Shassi1;   // Признак выпуска/уборки лев. шасси
 bool   Priz_Shassi2;   // Признак выпуска/уборки прав. шасси
 bool   Priz_Shassi3;   // Признак выпуска/уборки нос. шасси

 bool   Priz_Lock_beg1; // Признак замок выпуск лев. шасси
 bool   Priz_Lock_beg2; // Признак замок выпуск прав. шасси
 bool   Priz_Lock_beg3; // Признак замок выпуск нос. шасси

 bool   Priz_Lock_end1; // Признак замок уборка лев. шасси
 bool   Priz_Lock_end2; // Признак замок уборка прав. шасси
 bool   Priz_Lock_end3; // Признак замок уборка нос. шасси

 bool   Priz_Siren1;    // Признак сирены 1
 bool   Priz_Siren2;    // Признак сирены 2
 bool   Priz_Siren3;    // Признак сирены 3

 double Oborot1;        // Обороты левого двигателя (0+110%)
 double Oborot2;        // Обороты правого двигателя (0+110%)

 double Step_vint1;     // Шаг винта лев. (-25+80)
 double Step_vint2;     // Шаг винта прав. (-25+80)

 double Gt1;            // Часовой расход топлива Gt лев. (0+350 кг/час)
 double Gt2;            // Часовой расход топлива Gt прав. (0+350 кг/час)

 double Oborot_vint1;   // Обороты винта лев. (0+2100)
 double Oborot_vint2;   // Обороты винта прав. (0+2100)

 double Vprib;          // Скорость приборная (0+450 км/час) (не зависит от отказов считается всегда!!!)
 double H;              // Высота (0+9500 м)

 bool Plug1;            // свеча лев.
 bool Plug2;            // свеча прав.

 bool Plug1_second;     // свеча лев. (2 вариант звучания)
 bool Plug2_second;     // свеча прав.(2 вариант звучания)

 bool Pompage1;         // помпаж лев.
 bool Pompage2;         // помпаж прав.

 bool Preobr_36v;       //  Преобразователь 36 в
 bool Preobr_115v;      //  Преобразователь 115 в
 bool Accumulator;      //  Аккумулятор правый
};

//-----------------------------------------------
// параметры радиосвязи
struct SHRADIO_OUT2
{
 bool  Priz_CIMS;               // Признак работы ЦИМС

 bool  Priz_Rab_UKV1;           // Признак работы УКВ1
 bool  Priz_Rab_UKV2;           // Признак работы УКВ2
 bool  Priz_Rab_KV;             // Признак работы КВ

 bool  Priz_Active_UKV1_pilot1; // Признак активной УКВ1 (1 пилот)
 bool  Priz_Active_UKV2_pilot1; // Признак активной УКВ2 (1 пилот)
 bool  Priz_Active_KV_pilot1;   // Признак активной КВ   (1 пилот)

 bool  Priz_Active_UKV1_pilot2; // Признак активной УКВ1 (2 пилот)
 bool  Priz_Active_UKV2_pilot2; // Признак активной УКВ2 (2 пилот)
 bool  Priz_Active_KV_pilot2;   // Признак активной КВ   (2 пилот)

 bool  Priz_UKV1_DOP_pilot1;    // Признак дополнительного прослушивания УКВ1 (1 пилот)
 bool  Priz_UKV2_DOP_pilot1;    // Признак дополнительного прослушивания УКВ2 (1 пилот)
 bool  Priz_KV_DOP_pilot1;      // Признак дополнительного прослушивания КВ   (1 пилот)

 bool  Priz_UKV1_DOP_pilot2;    // Признак дополнительного прослушивания УКВ1 (2 пилот)
 bool  Priz_UKV2_DOP_pilot2;    // Признак дополнительного прослушивания УКВ2 (2 пилот)
 bool  Priz_KV_DOP_pilot2;      // Признак дополнительного прослушивания КВ   (2 пилот)

 bool  Priz_noise_UKV1;         // Признак "подавление шума" УКВ1 (кабина) (положение вкл =1)
 bool  Priz_noise_UKV2;         // Признак "подавление шума" УКВ2 (кабина) (положение вкл =1)
 bool  Priz_noise_KV;           // Признак "подавление шума" КВ   (кабина) (положение вкл =1)

 bool  Priz_SPU_pilot1;         // Тумблер СПУ  (1 пилот) на штурвале
 bool  Priz_Radio_pilot1;       // Тумблер РАДИО(1 пилот) на штурвале

 bool  Priz_SPU_pilot2;         // Тумблер СПУ  (2 пилот) на штурвале
 bool  Priz_Radio_pilot2;       // Тумблер РАДИО(2 пилот) на штурвале

 bool  Marker_FAR;              // Маркер дальний
 bool  Marker_MIDDLE;           // Маркер средний
 bool  Marker_NEAR;             // Маркер ближний

 bool  Danger_H;                // Опасная высота

 int   Priz_ARK;                // Какой АРК звучит
				// 0 = не Звучит
				// 1 =  1 аэродром АРК(Д) прямой курс
				// 2 =  1 аэродром АРК(Б) прямой курс
				// 3 =  1 аэродром АРК(Д) обр курс
				// 4 =  1 аэродром АРК(Б) обр курс
				// 5 =  2 аэродром АРК(Д) прямой курс
				// 6 =  2 аэродром АРК(Б) прямой курс
				// 7 =  2 аэродром АРК(Д) обр курс
				// 8 =  2 аэродром АРК(Б) обр курс
				// 9 =  3 аэродром АРК(Д) прямой курс
				// 10 = 3 аэродром АРК(Б) прямой курс
				// 11 = 3 аэродром АРК(Д) обр курс
				// 12 = 3 аэродром АРК(Б) обр курс
 
 int   Priz_RSBN;               // Какой РСБН звучит
				// 0 = не Звучит
  				// 1 =  1 аэродром посадка прямой курс
				// 2 =  1 аэродром посадка обр курс
				// 3 =  2 аэродром посадка прямой курс
				// 4 =  2 аэродром посадка обр курс
				// 5 =  3 аэродром посадка прямой курс
				// 6 =  3 аэродром посадка обр курс
				// 7 =  режим навигация (на всех аэродромах одинаково)

 float Vol_UKV1_pilot1;         // Громкость УКВ1 (1 пилот) (0+100%)
 float Vol_UKV2_pilot1;         // Громкость УКВ2 (1 пилот) (0+100%)
 float Vol_KV_pilot1;           // Громкость КВ   (1 пилот) (0+100%)
 float Vol_UKV1_DOP_pilot1;     // Громкость дополнительного прослушивания УКВ1 (1 пилот) (0+100%)
 float Vol_UKV2_DOP_pilot1;     // Громкость дополнительного прослушивания УКВ2 (1 пилот) (0+100%)
 float Vol_KV_DOP_pilot1;       // Громкость дополнительного прослушивания КВ   (1 пилот) (0+100%)
 float Vol_SPU_pilot1;          // Громкость СПУ (1 пилот) (0+100%)
 float Vol_ARK_pilot1;          // Громкость АРК (1 пилот) (0+100%)
 float Vol_RNU1_pilot1;         // Громкость прослушивания радионавигационного уст-ва №1 (1 пилот) (0+100%)
 float Vol_RNU2_pilot1;         // Громкость прослушивания радионавигационного уст-ва №2 (1 пилот) (0+100%)
 float Vol_RNU3_pilot1;         // Громкость прослушивания радионавигационного уст-ва №3 (1 пилот) (0+100%)

 float Vol_UKV1_pilot2;         // Громкость УКВ1 (2 пилот) (0+100%)
 float Vol_UKV2_pilot2;         // Громкость УКВ2 (2 пилот) (0+100%)
 float Vol_KV_pilot2;           // Громкость КВ   (2 пилот) (0+100%)
 float Vol_UKV1_DOP_pilot2;     // Громкость дополнительного прослушивания УКВ1 (2 пилот) (0+100%)
 float Vol_UKV2_DOP_pilot2;     // Громкость дополнительного прослушивания УКВ2 (2 пилот) (0+100%)
 float Vol_KV_DOP_pilot2;       // Громкость дополнительного прослушивания КВ   (2 пилот) (0+100%)
 float Vol_SPU_pilot2;          // Громкость СПУ (2 пилот) (0+100%)
 float Vol_ARK_pilot2;          // Громкость АРК (2 пилот) (0+100%)
 float Vol_RNU1_pilot2;         // Громкость прослушивания радионавигационного уст-ва №1 (2 пилот) (0+100%)
 float Vol_RNU2_pilot2;         // Громкость прослушивания радионавигационного уст-ва №2 (2 пилот) (0+100%)
 float Vol_RNU3_pilot2;         // Громкость прослушивания радионавигационного уст-ва №3 (2 пилот) (0+100%)

 float Freq_UKV1;               // Частота УКВ1 (МГЦ) (кабина)
 float Freq_UKV2;               // Частота УКВ2 (МГЦ) (кабина)
 float Freq_KV;                 // Частота КВ   (МГЦ) (кабина)

 float ukv1_Freq[3];            // Частоты УКВ1 (МГЦ) ([0] - балашов, [1] - ртищево, [2] - борисоглебск)
 float ukv2_Freq[3];            // Частоты УКВ2 (МГЦ) ([0] - балашов, [1] - ртищево, [2] - борисоглебск)
 float kv_Freq[3];              // Частоты КВ   (МГЦ) ([0] - балашов, [1] - ртищево, [2] - борисоглебск)

 float ukv1_Daln[3];            // Дальность горизонт. до УКВ1 (км) ([0] - балашов, [1] - ртищево, [2] - борисоглебск)
 float ukv2_Daln[3];            // Дальность горизонт. до УКВ2 (км) ([0] - балашов, [1] - ртищево, [2] - борисоглебск)
 float kv_Daln[3];              // Дальность горизонт. до КВ   (км) ([0] - балашов, [1] - ртищево, [2] - борисоглебск)

 int gromk[2];			// Положение галетника ГРОМК [2] - 0 левый / 1 правый //значения: 0=ВС / 1=РС / 2=АРК / 3=РНУ1 / 4=РНУ2 / 5=РНУ3

 bool Priz_ton1000;             // Признак тонального сигнала 1000 Гц
 float CUS_ARK;                 // Коэффициэнт усиления громкости АРК (0.0+1.0)
};

//-----------------------------------------------
// параметры для речевого информатора
struct SHSPEECH_OUT
{
 bool VoiceInfo[100]; // Сообщения речевого информатора (1 = сообщение пришло)
 bool Power_speech;   // Включение речевого информатора (питание)
 bool Button_RI1;     // Кнопка РИ (1 = нажата) 1 пилот
 bool Button_RI2;     // Кнопка РИ (1 = нажата) 2 пилот
 bool List1;          // Включение прослушивания списка 1 пилот
 bool List2;          // Включение прослушивания списка 2 пилот
 double Volume1;      // Громкость речевого 1 пилот (0+100%)
 double Volume2;      // Громкость речевого 2 пилот (0+100%)
};

// VoiceInfo[xx]
// [0] - ПОЖАР ЛЕВОГО ДВИГАТЕЛЯ
// [1] - ПОЖАР ПРАВОГО ДВИГАТЕЛЯ
// [2] - ПОЖАР БАГАЖНОГО ОТСЕКА
// [3] - УГОЛ АТАКИ ПРЕДЕЛЬНЫЙ
// [4] - ПЕРЕГРУЗКА ПРЕДЕЛЬНАЯ
// [5] - СКОРОСТЬ ПРЕДЕЛЬНАЯ
// [6] - ОТКАЗ ДВУХ ГЕНЕРАТОРОВ. СЕТЬ НА АКБ
// [7] - ВЫСОТА ОПАСНАЯ
// [8] - АККУМУЛЯТОР ОТКАЗ. СМОТРИ СЭС
// [9] - АККУМУЛЯТОР №1 ПЕРЕГРЕВ
// [10] - АККУМУЛЯТОР №2 ПЕРЕГРЕВ
// [11] - СКОРОСТЬ МАЛА
// [12] - ДАВЛЕНИЕ МАСЛА ЛЕВОГО МАЛО, СБРОСЬ ОБОРОТЫ ЛЕВОГО 
// [13] - ДАВЛЕНИЕ МАСЛА ПРАВОГО МАЛО, СБРОСЬ ОБОРОТЫ ПРАВОГО
// [14] - ДАВЛЕНИЕ ТОПЛИВА ЛЕВОГО МАЛО
// [15] - ДАВЛЕНИЕ ТОПЛИВА ПРАВОГО МАЛО
// [16] - ТЕМПЕРАТУРА ЛЕВОГО МАКСИМАЛЬНАЯ, СБРОСЬ ОБОРОТЫ ЛЕВОГО 
// [17] - ТЕМПЕРАТУРА ПРАВОГО МАКСИМАЛЬНАЯ, СБРОСЬ ОБОРОТЫ ПРАВОГО
// [18] - ДАВЛЕНИЕ МАСЛА ЛЕВОГО ВЕЛИКО
// [19] - ДАВЛЕНИЕ МАСЛА ПРАВОГО ВЕЛИКО
// [20] - ТЕМПЕРАТУРА МАСЛА ЛЕВОГО ДВИГАТЕЛЯ ПРЕДЕЛЬНАЯ
// [21] - ТЕМПЕРАТУРА МАСЛА ПРАВОГО ДВИГАТЕЛЯ ПРЕДЕЛЬНАЯ
// [22] - ДВИГАТЕЛЬ ЛЕВЫЙ НЕ ЗАПУСКАЙ
// [23] - ДВИГАТЕЛЬ ПРАВЫЙ НЕ ЗАПУСКАЙ 
// [24] - АВТОПИЛОТ ОТКАЗ
// [25] - ДВЕРИ НЕ ЗАКРЫТЫ
// [26] - ЭЛЕКТРОСНАБЖЕНИЕ ПРОВЕРЬ (ОТКАЗ ГЕНЕРАТОРА 28 ВОЛЬТ ЛЕВОГО)
// [27] - ЭЛЕКТРОСНАБЖЕНИЕ ПРОВЕРЬ (ОТКАЗ ГЕНЕРАТОРА 28 ВОЛЬТ ПРАВОГО)
// [28] - КРЕН ВЕЛИК
// [29] - ЭЛЕКТРОСНАБЖЕНИЕ ПРОВЕРЬ (ОТКАЗ ГЕНЕРАТОРА 115 ВОЛЬТ ЛЕВОГО)
// [30] - ЭЛЕКТРОСНАБЖЕНИЕ ПРОВЕРЬ (ОТКАЗ ГЕНЕРАТОРА 115 ВОЛЬТ ПРАВОГО)
// [31] - ОТКАЗ ДВУХ ПНС
// [32] - ОТКАЗ ДВУХ БКВ
// [33] - ОТКАЗ ПНС 3
// [34] - ОТКАЗ БКВ 3
// [35] - ОБЛЕДЕНЕНИЕ
// [36] - ЗАКРЫЛКИ ПРОВЕРЬ
// [37] - ШАССИ ВЫПУСТИ
// [38] - ШАССИ ПРОВЕРЬ
// [39] - СБРОСЬ ОБОРОТЫ ЛЕВОГО
// [40] - СБРОСЬ ОБОРОТЫ ПРАВОГО
// [41] - СБРОСЬ ОБОРОТЫ ЛЕВОГО
// [42] - СБРОСЬ ОБОРОТЫ ПРАВОГО
// [43] - СБРОСЬ ОБОРОТЫ ВИНТА ЛЕВОГО
// [44] - СБРОСЬ ОБОРОТЫ ВИНТА ПРАВОГО
// [45] - АВАРИЙНЫЙ ОСТАТОК В ЛЕВОМ БАКЕ
// [46] - АВАРИЙНЫЙ ОСТАТОК В ПРАВОМ БАКЕ
// [47] - ВРЕМЯ ЗАПУСКА ВЫШЕ ДОПУСТИМОГО
// [48] - ПЕРЕКАЧКУ ТОПЛИВА ВКЛЮЧИ
// [49] - ОТКАЗ ПОС ВИНТА ЛЕВОГО
// [50] - ОТКАЗ ПОС ВИНТА ПРАВОГО
// [51] - ОТКАЗ ПНС 1
// [52] - ОТКАЗ ПНС 2
// [53] - ОТКАЗ БКВ 1
// [54] - ОТКАЗ БКВ 2
// [55] - ЭШЕЛОН ПРОВЕРЬ
// [56] - ВЫСОТУ ПРОВЕРЬ
// [57] - ПРОШЕЛ ЗАДАННУЮ ВЫСОТУ
// [58] - ЛЕВЫЙ ДВИГАТЕЛЬ НА ИЗОЛИРУЮЩЕМ
// [59] - ПРАВЫЙ ДВИГАТЕЛЬ НА ИЗОЛИРУЮЩЕМ
 

//-----------------------------------------------
// указатель оборотов LUN 1348 (левый двигатель)
typedef struct
{
 double fOborot;       // об/ мин
}SHLUN1348_Left_OUT; 

//-----------------------------------------------
// указатель оборотов LUN 1348 (правый двигатель)
typedef struct
{
 double fOborot;       // об/ мин
}SHLUN1348_Right_OUT;

//-----------------------------------------------
// Указатель крутящего момента LUN-1539-02.8 (левый двигатель)
typedef struct
{
 bool   blenker;     // бленкер отказа 0=yes
 double fMk;         // 0+120% Mk крутящий момент
}SHLUN1539_Left_OUT; 

//-----------------------------------------------
// Указатель крутящего момента LUN-1539-02.8 (правый двигатель)
typedef struct
{
 bool   blenker;     // бленкер отказа 0=yes
 double fMk;         // 0+120% Mk крутящий момент
}SHLUN1539_Right_OUT; 

//-----------------------------------------------
// Указатель положения шасси LUN-1694-8
typedef struct
{
 bool bLamp[6]; //лампы шасси
 // 0 - красная левая, 1- красная центр, 2- красная правая (шасси убраны)
 // 3 - зеленая левая, 4- зеленая центр, 5- зеленая правая (шасси выпущены)
}SHLUN1694_OUT;   

//-------------------------------------------------
// Панель УКВ1,УКВ2,Xa,Za
typedef  struct 
{ 
 int    Aero;  // 0=balashov, 1=rtischevo, 2=borisoglebsk
 double UKV1;  // MHZ
 double UKV2;  // MHZ
 double KV;    // MHZ
 double Xa;    // 
 double Za;    //   
 double ARK1_CHAN1;  // ARK1 CHANNEL1
 double ARK1_CHAN2;  // ARK1 CHANNEL2
 double KRM;         // KRM              
 int    SO_Code;     // SO-2010 CODE
}SHPANEL_UKV_OUT; 

//-------------------------------------------------
// РЕЗЕРВНЫЙ ИНДИКАТОР ИСРП-26
typedef  struct 
{ 
 float Vprib;
 float Vvert;
 float Baro_H_QFE;
 float Baro_H_QNH;
 float Baro_H_STD;
 float Kren;
 float Tangage;
 float Kurs;
 float SetKurs;
 float Number_M;
 float QFE_mmHg;
 float QFE_hPa;
 float QNH_mmHg;
 float QNH_hPa;
 float STD_mmHg;
 float STD_hPa;
	
 bool Brightness_minus;
 bool Brightness_plus;
 bool Fast_Korrection;
 bool HDG_press;
 bool BARO_press;
 int  BARO_roll;
 int  HDG_roll;
					
 bool Otkaz[5];		// 0 = otkaz Vprib 
			// 1 = otkaz kren + tangage
			// 2 = otkaz giromagnitnogo kursa
			// 3 = otkaz Vvert
			// 4 = otkaz barometr vysoty
	
 bool Irp_1;		// vkl IRP-1
 float Battery;		// zaryad ot IRP-1
 bool Power;			
}SHISRP26_OUT; 

//-------------------------------------------------
// ДЛЯ САМОЛЕТА 3D- МОДЕЛЬ
typedef  struct 
{ 
 float Oborot_left;   // Обороты лев.
 float Oborot_right;  // Обороты прав.
 float Chassis_front; // Положение шасси нос. (0.0 = убрано, 1.0 = выпущено)
 float Chassis_left;  // Положение шасси лев. (0.0 = убрано, 1.0 = выпущено)
 float Chassis_right; // Положение шасси прав. (0.0 = убрано, 1.0 = выпущено)
 float Kurs;          // Курс
 float Kren;          // Крен
 float Tangage;       // Тангаж
 float Yaw;           // Угол рыскания
}SHPLANE_OUT; 
//-------------------------------------------------

struct SHPRIB_OUT
{
 bool TTablo1[10];  //  9 светосигн.          0=контроль ламп
 bool TTablo2[4];   //  3 светосигн. закрылки 0=контроль ламп
 bool TTablo3[4];   //  3 светосигн. маркер   0=контроль ламп

 double Sharik;     //  Указатель скольжения (шарик) -1.0 + 1.0  
 
 bool  Priz_SPU_pilot1;         // Тумблер СПУ  (1 пилот) на штурвале
 bool  Priz_Radio_pilot1;       // Тумблер РАДИО(1 пилот) на штурвале

 bool  Priz_SPU_pilot2;         // Тумблер СПУ  (2 пилот) на штурвале
 bool  Priz_Radio_pilot2;       // Тумблер РАДИО(2 пилот) на штурвале   
  
 SHLUN1348_Left_OUT   LUN1348_Left;
 SHLUN1348_Right_OUT  LUN1348_Right;
 SHLUN1539_Left_OUT   LUN1539_Left;
 SHLUN1539_Right_OUT  LUN1539_Right;
 SHLUN1694_OUT        LUN1694;
 SHPANEL_UKV_OUT      PANEL_UKV;
 SHISRP26_OUT         ISRP26; 
 SHPLANE_OUT          PLANE;
};

// ВХОДНАЯ СТРУКТУРА ДЛЯ ПУЛЬТА ИНСТРУКТОРА (ОТ ПИКСАЙКИНА)
//---------------------------------
struct SHCOMMON_STRUCT
{
 SHSOUND_OUT   SOUND;  // ШУМЫ
 SHRADIO_OUT2  RADIO;  // РАДИОСВЯЗЬ
 SHSPEECH_OUT  SPEECH; // РЕЧЕВОЙ ИНФОРМАТОР 
 SHPRIB_OUT    PRIB;   // ПРИБОРЫ
};
//---------------------------------

#pragma pack(pop)

#endif
